allprojects {
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'io.spring.dependency-management'

    compileJava.dependsOn validateStructure
    sourceCompatibility = JavaVersion.VERSION_11

    dependencies {
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor  "org.projectlombok:lombok:${lombokVersion}"
        testCompileOnly  "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor  "org.projectlombok:lombok:${lombokVersion}"
        implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    }

    ext.libs = [
            unit_tests: [
                    "junit:junit:4.12",
                    "org.mockito:mockito-all:1.10.19",
                    "org.springframework.boot:spring-boot-starter-test:${springBootVersion}",
            ],
            spring_boot: [
                    "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
                    "org.springframework:spring-context"
            ],
            spring_rest: [
                    "org.springframework.boot:spring-boot-starter-logging:${springBootVersion}",
                    "org.springframework.boot:spring-boot-devtools:${springBootVersion}",
                    "org.springframework.boot:spring-boot-starter-actuator"
            ],
            spring_jpa: [
                    "org.springframework.boot:spring-boot-starter-data-jpa"
            ],
            api_validation:[
                   "org.springframework.boot:spring-boot-starter-validation:2.7.2"
            ],
            log:[
                    "org.slf4j:slf4j-api:1.7.19"
            ],
            mapper:[
                    "org.modelmapper:modelmapper:2.1.1"
            ],
            h2_database:[
                    "testImplementation group: 'com.h2database', name: 'h2', version: '1.3.148'"
            ]
    ]

    test.finalizedBy(project.tasks.jacocoTestReport)

    jacocoTestReport {
        dependsOn test
        reports {
            xml.setRequired true
            xml.setOutputLocation file("${buildDir}/reports/jacoco.xml")
            csv.setRequired false
            html.setOutputLocation file("${buildDir}/reports/jacocoHtml")
        }
    }

}

jacoco {
    toolVersion = "${jacocoVersion}"
    reportsDirectory = file("$buildDir/reports")
}

task jacocoMergedReport(type: JacocoReport) {
    dependsOn = subprojects.jacocoTestReport
    additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(subprojects.sourceSets.main.output)
    executionData.setFrom project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')
    reports {
        xml.setRequired true
        csv.setRequired false
        html.setRequired true
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}
tasks.named('wrapper') {
    gradleVersion = '7.4.2'
}
